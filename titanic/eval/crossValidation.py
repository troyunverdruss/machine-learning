import sys

import numpy as np
from sklearn.model_selection import KFold
from sklearn.metrics import roc_auc_score, roc_curve
import seaborn as sns
import matplotlib.pyplot as plt
import scikitplot as skplt

from logLoss import llfun

sys.path.insert(0, 'src/')
sys.path.insert(0, '../src/')
import shared


def main():
    df = shared.load_data()
    train = shared.get_train(df)
    target = shared.get_target(df)

    rf = shared.get_model()

    cv = KFold(n_splits=5)


    results = []
    for traincv, testcv in cv.split(train):
        rf.fit(train.iloc[traincv], target.iloc[traincv])
        probas = rf.predict_proba(train.iloc[testcv])

        # rc = roc_curve(target.iloc[testcv], [shared.make_int(x[0]) for x in probas])
        # results.append(rc)
        # probas = rf.fit(train.iloc[traincv], target.iloc[traincv]).predict_proba(train.iloc[testcv])
        # results.append(llfun(target.iloc[testcv], [shared.make_int(x[0]) for x in probas]))
        # sns.pointplot(x='fpr', y='tpr', data=rc)
        # plt.show()

        y_true = target.iloc[testcv] # ground truth labels
        y_probas = probas # predicted probabilities generated by sklearn classifier
        # skplt.metrics.plot_roc_curve(y_true, y_probas)
        # plt.show()

        results.append(roc_auc_score(y_true, y_probas))



    print('Results: ' + str(np.array(results).mean()))


if __name__ == '__main__':
    main()
